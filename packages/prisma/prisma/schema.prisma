// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  name         String
  role         Role
  provider     Provider?
  appointments Appointment[] @relation("ClientAppointments")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Provider {
  id                 String        @id @default(uuid())
  userId             String        @unique
  businessName       String
  specialties        String[]
  profileDescription String?
  averageRating      Float         @default(0)
  totalRatings       Int           @default(0)
  totalAppointments  Int           @default(0)
  user               User          @relation(fields: [userId], references: [id])
  schedules          Schedule[]
  appointments       Appointment[] @relation("ProviderAppointments")
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
}

model Schedule {
  id          String       @id @default(uuid())
  providerId  String
  dateTime    DateTime     @db.Timestamp
  duration    Int // duração em minutos
  isAvailable Boolean      @default(true)
  appointment Appointment?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  provider Provider @relation(fields: [providerId], references: [id])
}

model Appointment {
  id         String   @id @default(uuid())
  providerId String
  clientId   String
  scheduleId String   @unique
  status     Status   @default(PENDING)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  provider Provider @relation(fields: [providerId], references: [id], name: "ProviderAppointments")
  client   User     @relation(fields: [clientId], references: [id], name: "ClientAppointments")
  schedule Schedule @relation(fields: [scheduleId], references: [id])
}

enum Role {
  CLIENT
  PROVIDER
  ADMIN
}

enum Status {
  PENDING
  CONFIRMED
  CANCELED
}
